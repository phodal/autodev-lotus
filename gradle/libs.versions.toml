[versions]
# libraries
junit = "4.13.2"
opentest4j = "1.3.0"

# plugins
changelog = "2.4.0"
intelliJPlatform = "2.10.2"
kotlin = "2.2.21"
kover = "0.9.3"
qodana = "2025.2.1"

hamcrest = "3.0"
# Has to be in sync with IntelliJ Platform
composeuitest = "1.8.0-alpha04"
jewelstandalone = "0.31.0-252.27409"
skikoAwtRuntimeAll = "0.9.22"
mockk = "1.13.13"
coroutinesTest = "1.10.1"

# MCP and Ktor
mcp = "0.7.4"
ktor = "3.3.1"

[libraries]
junit = { group = "junit", name = "junit", version.ref = "junit" }
opentest4j = { group = "org.opentest4j", name = "opentest4j", version.ref = "opentest4j" }
hamcrest = { group = "org.hamcrest", name = "hamcrest", version.ref = "hamcrest" }
composeuitest = { group = "org.jetbrains.compose.ui", name = "ui-test-junit4-desktop", version.ref = "composeuitest" }
jewelstandalone = { group = "org.jetbrains.jewel", name = "jewel-int-ui-standalone", version.ref = "jewelstandalone" }
skikoAwtRuntimeAll = { group = "org.jetbrains.skiko", name = "skiko-awt-runtime-all", version.ref = "skikoAwtRuntimeAll" }
mockk = { group = "io.mockk", name = "mockk", version.ref = "mockk" }

# MCP and Ktor
mcp = { group = "io.modelcontextprotocol", name = "kotlin-sdk", version.ref = "mcp" }
ktor-client-cio = { group = "io.ktor", name = "ktor-client-cio", version.ref = "ktor" }
ktor-server-netty = { group = "io.ktor", name = "ktor-server-netty", version.ref = "ktor" }
coroutinesTest = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "coroutinesTest" }

[plugins]
changelog = { id = "org.jetbrains.changelog", version.ref = "changelog" }
intelliJPlatform = { id = "org.jetbrains.intellij.platform", version.ref = "intelliJPlatform" }
kotlin = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
qodana = { id = "org.jetbrains.qodana", version.ref = "qodana" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }